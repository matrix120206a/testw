name: Testw

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2025
    permissions:
      id-token: write # penting untuk OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # üß© Install versi terbaru Tailscale (biar ada dukungan OAuth)
      - name: Install latest Tailscale
        shell: pwsh
        run: |
          Write-Host "‚¨áÔ∏è Downloading latest Tailscale..."
          Invoke-WebRequest https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe -OutFile tailscale-installer.exe
          Write-Host "üöÄ Installing Tailscale..."
          Start-Process -FilePath .\tailscale-installer.exe -ArgumentList "/quiet" -Wait
          Write-Host "‚úÖ Tailscale updated."

      # üîé Verifikasi versi setelah update
      - name: Check updated Tailscale version
        shell: pwsh
        run: |
          & "C:\Program Files\Tailscale\tailscale.exe" version

      - name: Connect to Tailscale using reusable key
        shell: pwsh
        run: |
          Write-Host "üîë Connecting to Tailscale using reusable auth key..."
          & "C:\Program Files\Tailscale\tailscale.exe" up `
            --auth-key "tskey-auth-kK8tTQiJDX11CNTRL-EaeRtjmwjkMRcE9kNkoMkMG3FdRwyTQPA" `
            --unattended `
            --accept-routes `
            --accept-dns=false `
            --hostname "windows-runner-${{ github.run_id }}"


      - name: Display Tailscale IP
        run: |
          & "C:\Program Files\Tailscale\tailscale.exe" ip -4
          
      - name: Disable password complexity
        run: |
          secedit /export /cfg $env:TEMP\secpol.cfg
          (Get-Content $env:TEMP\secpol.cfg).Replace("PasswordComplexity = 1", "PasswordComplexity = 0") | Set-Content $env:TEMP\secpol.cfg
          secedit /configure /db $env:TEMP\secedit.sdb /cfg $env:TEMP\secpol.cfg /areas SECURITYPOLICY
          gpupdate /force

      - name: Create user Matrix
        run: |
          net user Matrix Matrix#1234 /add
          net localgroup "Administrators" Matrix /add
          reg add "HKLM\SOFTWARE\Microsoft\Windows\DWM" /v ForceEffectMode /t REG_DWORD /d 2 /f
          rundll32.exe themecpl.dll,OpenThemeAction "C:\Windows\resources\Themes\dark.theme"
          
          
          # Load Default User hive
          REG LOAD HKLM\Default C:\Users\Default\NTUSER.DAT
      
          # Taskbar kiri
          # reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f
      
          # Dark theme (system + apps)
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f
          reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
      
          # Disable transparency
          # reg add "HKLM\Default\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 0 /f
      
      
          # Unload hive
          REG UNLOAD HKLM\Default

          
      - name: Enable RDP
        run: |
          # Aktifkan RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          # Izinkan lewat firewall
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          # Tambahkan user Matrix ke grup (tidak error jika sudah ada)
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "Matrix" -ErrorAction SilentlyContinue

      - name: Clone repository using Git
        shell: pwsh
        run: |
          # Pastikan Git sudah terinstal (runner Windows biasanya sudah terinstal Git)
          git --version

          # Menjalankan perintah untuk clone repository
          cd C:\
          git clone https://github.com/matrix120206a/testw.git

          # Opsional: Tampilkan hasil clone
          Get-ChildItem C:\testw


#      - name: Setup Auto Apply Dark Theme on RDP Login
#        shell: pwsh
#        run: |
#          # Buat folder script
#          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null
#
#          # Simpan script ApplyDarkTheme.ps1
#          @'
#          Start-Process "rundll32.exe" -ArgumentList 'themecpl.dll,OpenThemeAction C:\Windows\resources\Themes\dark.theme'
#          RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters
#          '@ | Out-File -FilePath C:\Scripts\ApplyDarkTheme.ps1 -Encoding UTF8
#
#          # Daftarkan Scheduled Task untuk user Matrix
#          $Action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\ApplyDarkTheme.ps1"
#          $Trigger = New-ScheduledTaskTrigger -AtStartup
#          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "ApplyDarkTheme" -User "Matrix" -Force


#      - name: Setup Auto Wallpaper on RDP Login
#        shell: pwsh
#        run: |
#          # Buat folder untuk script
#          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null
#
#          # Tuliskan script PowerShell baris demi baris agar YAML tidak error
#          Set-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '$ErrorActionPreference = "Stop"'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value 'try {'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    $localPath = "D:\a\testw\testw\windows-11-dark-mode-blue-stock-official-3840x2400-5630.jpg"'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Add-Type @"'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        using System.Runtime.InteropServices;'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        public class WallpaperSetter {'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '            [DllImport("user32.dll", SetLastError = true)]'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '            public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '        }'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '"@'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value ''
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $localPath'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name WallpaperStyle -Value 10'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name TileWallpaper -Value 0'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    [WallpaperSetter]::SystemParametersInfo(0x0014, 0, $localPath, 0x0001 -bor 0x0002) | Out-Null'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '}'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value 'catch {'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    Write-Error "Wallpaper setup failed: $_"'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '    exit 1'
#          Add-Content -Path C:\Scripts\SetWallpaper.ps1 -Value '}'
#
#          # Daftarkan Scheduled Task agar berjalan saat LogOn user "Matrix"
#          $Action  = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\SetWallpaper.ps1"
#          $Trigger = New-ScheduledTaskTrigger -AtStartup
#          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "SetWallpaper" -User "Matrix" -Force

#      - name: Ensure local user Matrix exists
#        shell: pwsh
#        run: |
#          if (-not (Get-LocalUser -Name "Matrix" -ErrorAction SilentlyContinue)) {
#            Write-Host "üë§ Membuat user Matrix..."
#            net user Matrix "12345" /add
#            net localgroup Administrators Matrix /add
#          } else {
#            Write-Host "‚úÖ User Matrix sudah ada."
#          }

#      - name: Simulate RDP login for user Matrix
#        shell: pwsh
#        run: |
#          Write-Host "üë§ Simulating RDP login for user Matrix..."
#          Write-Host "Creating local session via tscon..."
#
#          # Coba cari session aktif milik user Matrix
#          $sessionLine = (qwinsta | Select-String "Matrix") | Out-String
#          if (-not $sessionLine) {
#            Write-Host "‚ö†Ô∏è Tidak ditemukan session Matrix, membuat dummy session..."
#            cmd /c "runas /user:Matrix cmd.exe /c exit"
#            Start-Sleep -Seconds 3
#            $sessionLine = (qwinsta | Select-String "Matrix") | Out-String
#          }
#
#          if (-not $sessionLine) {
#            Write-Host "‚ùå Gagal menemukan session Matrix setelah dicoba."
#            exit 0
#          }
#
#          $sessionId = ($sessionLine -split "\s+")[2]
#          Write-Host "üìü Session ID Matrix: $sessionId"
#          tscon $sessionId /dest:console
#          Write-Host "‚úÖ Session Matrix berhasil dihubungkan ke console."



      - name: Run PowerShell Script to Schedule CMD Task
        run: |
          # Path ke skrip CMD
          $cmdScriptPath = "D:\a\testw\testw\Scripts\SetWallpaperCMD.bat"
          
          # Membuat task scheduler untuk menjalankan skrip CMD pada startup
          $Action = New-ScheduledTaskAction -Execute "cmd.exe" -Argument "/c $cmdScriptPath"
          $Trigger = New-ScheduledTaskTrigger -AtLogOn
          Register-ScheduledTask -Action $Action -Trigger $Trigger -TaskName "SetWallpaper" -User "System" -Force


      - name: Confirm Task Created
        run: schtasks /query /tn "SetWallpaper"

      - name: Set Timezone to Asia/Jakarta
        shell: pwsh
        run: |
          tzutil /s "SE Asia Standard Time"

      - name: Setup Auto Apply Dark Theme and Execute Batch Files
        shell: pwsh
        run: |
          # Buat folder script jika belum ada
          New-Item -ItemType Directory -Path C:\Scripts -Force | Out-Null

          # Simpan skrip ApplyDarkTheme.ps1
          @'
          Start-Process "rundll32.exe" -ArgumentList 'themecpl.dll,OpenThemeAction C:\Windows\resources\Themes\dark.theme'
          RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters
          '@ | Out-File -FilePath C:\Scripts\ApplyDarkTheme.ps1 -Encoding UTF8

          # Buat file batch untuk SetDarkThemeCMD.bat
          @'
          @echo off
          rundll32.exe themecpl.dll,OpenThemeAction C:\Windows\resources\Themes\dark.theme
          rundll32.exe user32.dll,UpdatePerUserSystemParameters
          '@ | Out-File -FilePath C:\Scripts\SetDarkThemeCMD.bat -Encoding ASCII

          # Buat file batch untuk SetWallpaperCMD.bat
          @'
          @echo off
          # Ganti path dengan path gambar di repository setelah clone
          reg add "HKCU\Control Panel\Desktop" /v Wallpaper /t REG_SZ /d "C:\testw\Scripts\windows-11-dark-mode.png" /f
          RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters
          '@ | Out-File -FilePath C:\Scripts\SetWallpaperCMD.bat -Encoding ASCII

          # Daftarkan Scheduled Task untuk user Matrix dengan hak administrator
          $Action1 = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-ExecutionPolicy Bypass -File C:\Scripts\ApplyDarkTheme.ps1"
          $Action2 = New-ScheduledTaskAction -Execute "cmd.exe" -Argument "/c C:\Scripts\SetDarkThemeCMD.bat"
          $Action3 = New-ScheduledTaskAction -Execute "cmd.exe" -Argument "/c C:\Scripts\SetWallpaperCMD.bat"
          
          # Trigger at logon
          $Trigger = New-ScheduledTaskTrigger -AtLogon

          # Daftarkan task untuk ApplyDarkTheme, SetDarkThemeCMD, dan SetWallpaperCMD
          Register-ScheduledTask -Action $Action1 -Trigger $Trigger -TaskName "ApplyDarkTheme" -User "Matrix" -Force -RunLevel Highest
          Register-ScheduledTask -Action $Action2 -Trigger $Trigger -TaskName "SetDarkThemeCMD" -User "Matrix" -Force -RunLevel Highest
          Register-ScheduledTask -Action $Action3 -Trigger $Trigger -TaskName "SetWallpaperCMD" -User "Matrix" -Force -RunLevel Highest

      - name: Keep session alive
        run: |
          Write-Output "Runner is alive. Press Ctrl+C to stop."
          while ($true) { Start-Sleep -Seconds 300 }
